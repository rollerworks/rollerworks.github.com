<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

    <xsd:element name="search" type="group-struct"/>

    <xsd:complexType name="group">
        <xsd:sequence>
            <xsd:element name="group" type="group-struct" minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="group-struct">
        <xsd:sequence maxOccurs="1" minOccurs="1">
            <xsd:element name="fields" type="field" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="groups" type="group" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
        <xsd:attribute name="logical" default="AND">
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="OR"/>
                    <xsd:enumeration value="AND"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="field">
        <xsd:sequence minOccurs="1" maxOccurs="unbounded">
            <xsd:element name="field" type="field-content"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="field-content">
        <xsd:sequence>
            <xsd:element name="single-values" type="single-value" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="excluded-values" type="single-value" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="ranges" type="range" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="excluded-ranges" type="range" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="comparisons" type="compare" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="pattern-matchers" type="pattern-matcher" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="single-value">
        <xsd:sequence>
            <xsd:element name="value" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="range">
        <xsd:sequence>
            <xsd:element name="range" type="range-struct" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="compare">
        <xsd:sequence>
            <xsd:element name="compare" type="compare-struct" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="pattern-matcher">
        <xsd:sequence>
            <xsd:element name="pattern-matcher" type="pattern-matcher-struct" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="range-struct">
        <xsd:sequence>
            <xsd:element name="lower" type="range-value-struct" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="upper" type="range-value-struct" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="range-value-struct">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="inclusive" type="xsd:boolean" default="true" />
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="compare-struct">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="operator">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="&lt;"/><!-- < -->
                            <xsd:enumeration value="&gt;"/><!-- > -->
                            <xsd:enumeration value="&lt;&gt;"/><!-- <> -->
                            <xsd:enumeration value="&gt;="/><!-- >= -->
                            <xsd:enumeration value="&lt;="/><!-- <= -->
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="pattern-matcher-struct">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="case-insensitive" type="xsd:boolean" />
                <xsd:attribute name="type">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="contains"/>
                            <xsd:enumeration value="starts_with"/>
                            <xsd:enumeration value="ends_with"/>
                            <xsd:enumeration value="regex"/>
                            <xsd:enumeration value="not_contains"/>
                            <xsd:enumeration value="not_starts_with"/>
                            <xsd:enumeration value="not_ends_with"/>
                            <xsd:enumeration value="not_regex"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="logical-type">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="type">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="contains"/>
                            <xsd:enumeration value="starts_with"/>
                            <xsd:enumeration value="ends_with"/>
                            <xsd:enumeration value="regex"/>
                            <xsd:enumeration value="not_contains"/>
                            <xsd:enumeration value="not_starts_with"/>
                            <xsd:enumeration value="not_ends_with"/>
                            <xsd:enumeration value="not_regex"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

</xsd:schema>
